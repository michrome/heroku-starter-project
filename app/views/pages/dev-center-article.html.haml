= link_to 'Back to demo', root_path

:markdown
  # Finding the N nearest things to a point, using Rails and PostGIS on Heroku

  Applications often need to find the N nearest things to a point. For example, a restaurant finder that shows the nearest 10 restaurants to its userâ€™s location.
  
  ## Setup PostGIS on local

    Ensure both [PostgreSQL](http://www.postgresql.org) and [PostGIS](http://postgis.org) are installed on your local machine.

    >callout
    >The most reliable way to get both on OSX is to download and install [Postgres.app](http://postgresapp.com).

    Establish a local `psql` session using `$ psql -h localhost`, connect to your database using `\connect your_database`, create the PostGIS extension using `CREATE EXTENSION postgis;` then quit `psql` using `\q`.

      ```term
      $ psql -h localhost
      psql (9.1.4)
      Type "help" for help.
      
      your_name=# \connect your_database
      You are now connected to database "your_database" as user "your_name".
      your_database=# CREATE EXTENSION postgis;
      CREATE EXTENSION
      your_database=> \q
      ```

  ## Setup PostGIS on Heroku

  ### Upgrade to a Production tier database

  PostGIS is only available on Production tier databases. If you are already using a Production tier database, skip this section.

  To upgrade to a Production tier database, [follow this guide](https://devcenter.heroku.com/articles/upgrade-heroku-postgres-with-pgbackups).

  ### Create the PostGIS extension  
  
  Establish a `psql` session with your remote database using `$ heroku pg:psql`, create the PostGIS extension using `CREATE EXTENSION postgis;` then quit `psql` using `\q`.

      ```term
      $ heroku pg:psql
      psql (9.1.4, server 9.2.4)
      
      SSL connection (cipher: DHE-RSA-AES256-SHA, bits: 256)
      Type "help" for help.
      
      dbn625oqb52h1v=> CREATE EXTENSION postgis;
      CREATE EXTENSION
      dbn625oqb52h1v=> \q
      ```
